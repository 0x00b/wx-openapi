/*
微信公众号素材相关接口

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package material

import (
	"encoding/json"
)

// checks if the BatchgetMaterialResponseItemInnerContentNewsItemInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BatchgetMaterialResponseItemInnerContentNewsItemInner{}

// BatchgetMaterialResponseItemInnerContentNewsItemInner struct for BatchgetMaterialResponseItemInnerContentNewsItemInner
type BatchgetMaterialResponseItemInnerContentNewsItemInner struct {
	// 图文消息的标题
	Title *string `json:"title,omitempty"`
	// 图文消息的封面图片素材id（必须是永久mediaID）
	ThumbMediaId *string `json:"thumb_media_id,omitempty"`
	// 是否显示封面，0为false，即不显示，1为true，即显示
	ShowCoverPic *int32 `json:"show_cover_pic,omitempty"`
	// 作者
	Author *string `json:"author,omitempty"`
	// 图文消息的摘要，仅有单图文消息才有摘要，多图文此处为空
	Digest *string `json:"digest,omitempty"`
	// 图文消息的具体内容，支持HTML标签，必须少于2万字符，小于1M，且此处会去除JS
	Content *string `json:"content,omitempty"`
	// 图文消息的原文地址，即点击“阅读原文”后的URL
	ContentSourceUrl *string `json:"content_source_url,omitempty"`
	// 图文页的URL，或者，当获取的列表是图片素材列表时，该字段是图片的URL
	Url *string `json:"url,omitempty"`
	// 封面URL
	ThumbUrl *string `json:"thumb_url,omitempty"`
}

// NewBatchgetMaterialResponseItemInnerContentNewsItemInner instantiates a new BatchgetMaterialResponseItemInnerContentNewsItemInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchgetMaterialResponseItemInnerContentNewsItemInner() *BatchgetMaterialResponseItemInnerContentNewsItemInner {
	this := BatchgetMaterialResponseItemInnerContentNewsItemInner{}
	return &this
}

// NewBatchgetMaterialResponseItemInnerContentNewsItemInnerWithDefaults instantiates a new BatchgetMaterialResponseItemInnerContentNewsItemInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchgetMaterialResponseItemInnerContentNewsItemInnerWithDefaults() *BatchgetMaterialResponseItemInnerContentNewsItemInner {
	this := BatchgetMaterialResponseItemInnerContentNewsItemInner{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) GetTitle() string {
	if o == nil || isNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) GetTitleOk() (*string, bool) {
	if o == nil || isNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) HasTitle() bool {
	if o != nil && !isNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) SetTitle(v string) {
	o.Title = &v
}

// GetThumbMediaId returns the ThumbMediaId field value if set, zero value otherwise.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) GetThumbMediaId() string {
	if o == nil || isNil(o.ThumbMediaId) {
		var ret string
		return ret
	}
	return *o.ThumbMediaId
}

// GetThumbMediaIdOk returns a tuple with the ThumbMediaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) GetThumbMediaIdOk() (*string, bool) {
	if o == nil || isNil(o.ThumbMediaId) {
		return nil, false
	}
	return o.ThumbMediaId, true
}

// HasThumbMediaId returns a boolean if a field has been set.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) HasThumbMediaId() bool {
	if o != nil && !isNil(o.ThumbMediaId) {
		return true
	}

	return false
}

// SetThumbMediaId gets a reference to the given string and assigns it to the ThumbMediaId field.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) SetThumbMediaId(v string) {
	o.ThumbMediaId = &v
}

// GetShowCoverPic returns the ShowCoverPic field value if set, zero value otherwise.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) GetShowCoverPic() int32 {
	if o == nil || isNil(o.ShowCoverPic) {
		var ret int32
		return ret
	}
	return *o.ShowCoverPic
}

// GetShowCoverPicOk returns a tuple with the ShowCoverPic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) GetShowCoverPicOk() (*int32, bool) {
	if o == nil || isNil(o.ShowCoverPic) {
		return nil, false
	}
	return o.ShowCoverPic, true
}

// HasShowCoverPic returns a boolean if a field has been set.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) HasShowCoverPic() bool {
	if o != nil && !isNil(o.ShowCoverPic) {
		return true
	}

	return false
}

// SetShowCoverPic gets a reference to the given int32 and assigns it to the ShowCoverPic field.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) SetShowCoverPic(v int32) {
	o.ShowCoverPic = &v
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) GetAuthor() string {
	if o == nil || isNil(o.Author) {
		var ret string
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) GetAuthorOk() (*string, bool) {
	if o == nil || isNil(o.Author) {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) HasAuthor() bool {
	if o != nil && !isNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given string and assigns it to the Author field.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) SetAuthor(v string) {
	o.Author = &v
}

// GetDigest returns the Digest field value if set, zero value otherwise.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) GetDigest() string {
	if o == nil || isNil(o.Digest) {
		var ret string
		return ret
	}
	return *o.Digest
}

// GetDigestOk returns a tuple with the Digest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) GetDigestOk() (*string, bool) {
	if o == nil || isNil(o.Digest) {
		return nil, false
	}
	return o.Digest, true
}

// HasDigest returns a boolean if a field has been set.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) HasDigest() bool {
	if o != nil && !isNil(o.Digest) {
		return true
	}

	return false
}

// SetDigest gets a reference to the given string and assigns it to the Digest field.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) SetDigest(v string) {
	o.Digest = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) GetContent() string {
	if o == nil || isNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) GetContentOk() (*string, bool) {
	if o == nil || isNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) HasContent() bool {
	if o != nil && !isNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) SetContent(v string) {
	o.Content = &v
}

// GetContentSourceUrl returns the ContentSourceUrl field value if set, zero value otherwise.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) GetContentSourceUrl() string {
	if o == nil || isNil(o.ContentSourceUrl) {
		var ret string
		return ret
	}
	return *o.ContentSourceUrl
}

// GetContentSourceUrlOk returns a tuple with the ContentSourceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) GetContentSourceUrlOk() (*string, bool) {
	if o == nil || isNil(o.ContentSourceUrl) {
		return nil, false
	}
	return o.ContentSourceUrl, true
}

// HasContentSourceUrl returns a boolean if a field has been set.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) HasContentSourceUrl() bool {
	if o != nil && !isNil(o.ContentSourceUrl) {
		return true
	}

	return false
}

// SetContentSourceUrl gets a reference to the given string and assigns it to the ContentSourceUrl field.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) SetContentSourceUrl(v string) {
	o.ContentSourceUrl = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) GetUrl() string {
	if o == nil || isNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) GetUrlOk() (*string, bool) {
	if o == nil || isNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) HasUrl() bool {
	if o != nil && !isNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) SetUrl(v string) {
	o.Url = &v
}

// GetThumbUrl returns the ThumbUrl field value if set, zero value otherwise.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) GetThumbUrl() string {
	if o == nil || isNil(o.ThumbUrl) {
		var ret string
		return ret
	}
	return *o.ThumbUrl
}

// GetThumbUrlOk returns a tuple with the ThumbUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) GetThumbUrlOk() (*string, bool) {
	if o == nil || isNil(o.ThumbUrl) {
		return nil, false
	}
	return o.ThumbUrl, true
}

// HasThumbUrl returns a boolean if a field has been set.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) HasThumbUrl() bool {
	if o != nil && !isNil(o.ThumbUrl) {
		return true
	}

	return false
}

// SetThumbUrl gets a reference to the given string and assigns it to the ThumbUrl field.
func (o *BatchgetMaterialResponseItemInnerContentNewsItemInner) SetThumbUrl(v string) {
	o.ThumbUrl = &v
}

func (o BatchgetMaterialResponseItemInnerContentNewsItemInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BatchgetMaterialResponseItemInnerContentNewsItemInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !isNil(o.ThumbMediaId) {
		toSerialize["thumb_media_id"] = o.ThumbMediaId
	}
	if !isNil(o.ShowCoverPic) {
		toSerialize["show_cover_pic"] = o.ShowCoverPic
	}
	if !isNil(o.Author) {
		toSerialize["author"] = o.Author
	}
	if !isNil(o.Digest) {
		toSerialize["digest"] = o.Digest
	}
	if !isNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !isNil(o.ContentSourceUrl) {
		toSerialize["content_source_url"] = o.ContentSourceUrl
	}
	if !isNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !isNil(o.ThumbUrl) {
		toSerialize["thumb_url"] = o.ThumbUrl
	}
	return toSerialize, nil
}

type NullableBatchgetMaterialResponseItemInnerContentNewsItemInner struct {
	value *BatchgetMaterialResponseItemInnerContentNewsItemInner
	isSet bool
}

func (v NullableBatchgetMaterialResponseItemInnerContentNewsItemInner) Get() *BatchgetMaterialResponseItemInnerContentNewsItemInner {
	return v.value
}

func (v *NullableBatchgetMaterialResponseItemInnerContentNewsItemInner) Set(val *BatchgetMaterialResponseItemInnerContentNewsItemInner) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchgetMaterialResponseItemInnerContentNewsItemInner) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchgetMaterialResponseItemInnerContentNewsItemInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchgetMaterialResponseItemInnerContentNewsItemInner(val *BatchgetMaterialResponseItemInnerContentNewsItemInner) *NullableBatchgetMaterialResponseItemInnerContentNewsItemInner {
	return &NullableBatchgetMaterialResponseItemInnerContentNewsItemInner{value: val, isSet: true}
}

func (v NullableBatchgetMaterialResponseItemInnerContentNewsItemInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchgetMaterialResponseItemInnerContentNewsItemInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
