/*
微信公众号素材相关接口

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package material

import (
	"encoding/json"
)

// checks if the BatchgetMaterialRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BatchgetMaterialRequest{}

// BatchgetMaterialRequest struct for BatchgetMaterialRequest
type BatchgetMaterialRequest struct {
	// 素材的类型，图片（image）、视频（video）、语音 （voice）、图文（news）
	Type *string `json:"type,omitempty"`
	// 从全部素材的该偏移位置开始返回，0表示从第一个素材 返回
	Offset *int32 `json:"offset,omitempty"`
	// 返回素材的数量，取值在1到20之间
	Count *int32 `json:"count,omitempty"`
}

// NewBatchgetMaterialRequest instantiates a new BatchgetMaterialRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchgetMaterialRequest() *BatchgetMaterialRequest {
	this := BatchgetMaterialRequest{}
	return &this
}

// NewBatchgetMaterialRequestWithDefaults instantiates a new BatchgetMaterialRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchgetMaterialRequestWithDefaults() *BatchgetMaterialRequest {
	this := BatchgetMaterialRequest{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *BatchgetMaterialRequest) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchgetMaterialRequest) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *BatchgetMaterialRequest) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *BatchgetMaterialRequest) SetType(v string) {
	o.Type = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *BatchgetMaterialRequest) GetOffset() int32 {
	if o == nil || isNil(o.Offset) {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchgetMaterialRequest) GetOffsetOk() (*int32, bool) {
	if o == nil || isNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *BatchgetMaterialRequest) HasOffset() bool {
	if o != nil && !isNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *BatchgetMaterialRequest) SetOffset(v int32) {
	o.Offset = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *BatchgetMaterialRequest) GetCount() int32 {
	if o == nil || isNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchgetMaterialRequest) GetCountOk() (*int32, bool) {
	if o == nil || isNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *BatchgetMaterialRequest) HasCount() bool {
	if o != nil && !isNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *BatchgetMaterialRequest) SetCount(v int32) {
	o.Count = &v
}

func (o BatchgetMaterialRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BatchgetMaterialRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	if !isNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	return toSerialize, nil
}

type NullableBatchgetMaterialRequest struct {
	value *BatchgetMaterialRequest
	isSet bool
}

func (v NullableBatchgetMaterialRequest) Get() *BatchgetMaterialRequest {
	return v.value
}

func (v *NullableBatchgetMaterialRequest) Set(val *BatchgetMaterialRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchgetMaterialRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchgetMaterialRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchgetMaterialRequest(val *BatchgetMaterialRequest) *NullableBatchgetMaterialRequest {
	return &NullableBatchgetMaterialRequest{value: val, isSet: true}
}

func (v NullableBatchgetMaterialRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchgetMaterialRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
