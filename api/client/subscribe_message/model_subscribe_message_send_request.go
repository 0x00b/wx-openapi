/*
微信公众号订阅消息相关接口

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package subscribe_message

import (
	"encoding/json"
)

// checks if the SubscribeMessageSendRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscribeMessageSendRequest{}

// SubscribeMessageSendRequest struct for SubscribeMessageSendRequest
type SubscribeMessageSendRequest struct {
	// 是 接收者（用户）的 openid
	Touser *string `json:"touser,omitempty"`
	// 是 所需下发的订阅模板id
	TemplateId *string `json:"template_id,omitempty"`
	// 否 点击模板卡片后的跳转页面，仅限本小程序内的页面。支持带参数,（示例index?foo=bar）。该字段不填则模板无跳转。
	Page *string `json:"page,omitempty"`
	// 是 模板内容，格式形如 { \"key1\": { \"value\": any }, \"key2\": { \"value\": any } }
	Data map[string]interface{} `json:"data,omitempty"`
	// 否 跳转小程序类型：developer为开发版；trial为体验版；formal为正式版；默认为正式版
	MiniprogramState *string `json:"miniprogram_state,omitempty"`
	// 否 进入小程序查看”的语言类型，支持zh_CN(简体中文)、en_US(英文)、zh_HK(繁体中文)、zh_TW(繁体中文)，默认为zh_CN
	Lang *string `json:"lang,omitempty"`
}

// NewSubscribeMessageSendRequest instantiates a new SubscribeMessageSendRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscribeMessageSendRequest() *SubscribeMessageSendRequest {
	this := SubscribeMessageSendRequest{}
	return &this
}

// NewSubscribeMessageSendRequestWithDefaults instantiates a new SubscribeMessageSendRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscribeMessageSendRequestWithDefaults() *SubscribeMessageSendRequest {
	this := SubscribeMessageSendRequest{}
	return &this
}

// GetTouser returns the Touser field value if set, zero value otherwise.
func (o *SubscribeMessageSendRequest) GetTouser() string {
	if o == nil || isNil(o.Touser) {
		var ret string
		return ret
	}
	return *o.Touser
}

// GetTouserOk returns a tuple with the Touser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscribeMessageSendRequest) GetTouserOk() (*string, bool) {
	if o == nil || isNil(o.Touser) {
		return nil, false
	}
	return o.Touser, true
}

// HasTouser returns a boolean if a field has been set.
func (o *SubscribeMessageSendRequest) HasTouser() bool {
	if o != nil && !isNil(o.Touser) {
		return true
	}

	return false
}

// SetTouser gets a reference to the given string and assigns it to the Touser field.
func (o *SubscribeMessageSendRequest) SetTouser(v string) {
	o.Touser = &v
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *SubscribeMessageSendRequest) GetTemplateId() string {
	if o == nil || isNil(o.TemplateId) {
		var ret string
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscribeMessageSendRequest) GetTemplateIdOk() (*string, bool) {
	if o == nil || isNil(o.TemplateId) {
		return nil, false
	}
	return o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *SubscribeMessageSendRequest) HasTemplateId() bool {
	if o != nil && !isNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given string and assigns it to the TemplateId field.
func (o *SubscribeMessageSendRequest) SetTemplateId(v string) {
	o.TemplateId = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *SubscribeMessageSendRequest) GetPage() string {
	if o == nil || isNil(o.Page) {
		var ret string
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscribeMessageSendRequest) GetPageOk() (*string, bool) {
	if o == nil || isNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *SubscribeMessageSendRequest) HasPage() bool {
	if o != nil && !isNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given string and assigns it to the Page field.
func (o *SubscribeMessageSendRequest) SetPage(v string) {
	o.Page = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *SubscribeMessageSendRequest) GetData() map[string]interface{} {
	if o == nil || isNil(o.Data) {
		var ret map[string]interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscribeMessageSendRequest) GetDataOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Data) {
		return map[string]interface{}{}, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *SubscribeMessageSendRequest) HasData() bool {
	if o != nil && !isNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]interface{} and assigns it to the Data field.
func (o *SubscribeMessageSendRequest) SetData(v map[string]interface{}) {
	o.Data = v
}

// GetMiniprogramState returns the MiniprogramState field value if set, zero value otherwise.
func (o *SubscribeMessageSendRequest) GetMiniprogramState() string {
	if o == nil || isNil(o.MiniprogramState) {
		var ret string
		return ret
	}
	return *o.MiniprogramState
}

// GetMiniprogramStateOk returns a tuple with the MiniprogramState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscribeMessageSendRequest) GetMiniprogramStateOk() (*string, bool) {
	if o == nil || isNil(o.MiniprogramState) {
		return nil, false
	}
	return o.MiniprogramState, true
}

// HasMiniprogramState returns a boolean if a field has been set.
func (o *SubscribeMessageSendRequest) HasMiniprogramState() bool {
	if o != nil && !isNil(o.MiniprogramState) {
		return true
	}

	return false
}

// SetMiniprogramState gets a reference to the given string and assigns it to the MiniprogramState field.
func (o *SubscribeMessageSendRequest) SetMiniprogramState(v string) {
	o.MiniprogramState = &v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *SubscribeMessageSendRequest) GetLang() string {
	if o == nil || isNil(o.Lang) {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscribeMessageSendRequest) GetLangOk() (*string, bool) {
	if o == nil || isNil(o.Lang) {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *SubscribeMessageSendRequest) HasLang() bool {
	if o != nil && !isNil(o.Lang) {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *SubscribeMessageSendRequest) SetLang(v string) {
	o.Lang = &v
}

func (o SubscribeMessageSendRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscribeMessageSendRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Touser) {
		toSerialize["touser"] = o.Touser
	}
	if !isNil(o.TemplateId) {
		toSerialize["template_id"] = o.TemplateId
	}
	if !isNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !isNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !isNil(o.MiniprogramState) {
		toSerialize["miniprogram_state"] = o.MiniprogramState
	}
	if !isNil(o.Lang) {
		toSerialize["lang"] = o.Lang
	}
	return toSerialize, nil
}

type NullableSubscribeMessageSendRequest struct {
	value *SubscribeMessageSendRequest
	isSet bool
}

func (v NullableSubscribeMessageSendRequest) Get() *SubscribeMessageSendRequest {
	return v.value
}

func (v *NullableSubscribeMessageSendRequest) Set(val *SubscribeMessageSendRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscribeMessageSendRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscribeMessageSendRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscribeMessageSendRequest(val *SubscribeMessageSendRequest) *NullableSubscribeMessageSendRequest {
	return &NullableSubscribeMessageSendRequest{value: val, isSet: true}
}

func (v NullableSubscribeMessageSendRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscribeMessageSendRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
